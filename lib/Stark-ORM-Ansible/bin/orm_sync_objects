#!/usr/bin/php
<?php

/////////////////////////
///  Globals / Config

///  Libraries
chdir( dirname( __FILE__ ) );


/// Config
$hack_default_conf = '../../../../ansible-config.inc.php';
require_once(dirname(__FILE__). '/../../Ansible/Stage.class.php');
$stage = new Ansible__Stage( '',
							 array( 'lib_path'    => dirname(__FILE__). '/../..',
									'config_path' => $hack_default_conf,
									'url_prefix'  => '',
									)
							 );

///  CLI syntax
$dry_run = array_search('-n',$argv) !== false ? true : false;
$execute = array_search('-x',$argv) !== false ? true : false;
$delete  = array_search('-d',$argv) !== false ? true : false;
$verbose = array_search('-v',$argv) !== false ? true : false;
$debugging = array_search('-g',$argv) !== false ? true : false;
if ( $verbose ) $GLOBALS['BUG_ON'] = true;
///  Debugging function
if ( $verbose ) $GLOBALS['DEBUG_fh_stderr'] = fopen("php://stderr", 'w');

$from_dbname = null;#'glasses_prod';
$to_dbname   = null;#'glasses_dev';

$from_where = "1";
array_shift($argv);
foreach( $argv as $arg ) {
	if ( $arg[0] == '-' ) continue;

	if      ( empty( $main_class  ) ) $main_class = $arg;
	else if ( empty( $from_dbname ) ) $from_dbname = $arg;
	else if ( empty( $to_dbname   ) ) $to_dbname = $arg;
	else $from_where .= "\n    AND ". $arg;
}
if ( ! empty( $main_class ) && ! class_exists( $main_class ) )
	include("models/". str_replace('__','/',$main_class) .".php");

///  Usage (for CLI options), or syntax error
if ( array_search('--help', $argv) !== false
	 || ( empty( $from_dbname )
		  || empty( $to_dbname )
		  || empty( $main_class )
		  || ! class_exists( $main_class )
		  )
	 ) {
    echo ( $argv[0]. " [options] <php-class-name> <from-databse-name> <to-database-name> [<where-clause-item> <where-clause-item> ...] \n  Options:\n"
           . "    -v    \tVerbose, print status, and debugging output\n"
           . "    -g    \tExtra Verbose, debugging output\n"
           . "    -n    \tDry Run, don't actually run any inserts, updates or deletes, just report what would have been updated\n"
           . "    -x    \tDo run inserts, updates and deletes, AND do a commit() at the end...\n"
           . "    -d    \tDo Deletions on primary rows and sub-relation rows\n"
           . "    --help    \tThis message\n"
           );
    exit;
}

///////////////////////////
///  Main Runtime

$sync = $stage->orm_object_sync;
$sync->dry_run = $dry_run;
$sync->execute = $execute;
$sync->delete  = $delete;
$sync->verbose = $verbose;
$sync->debugging = $debugging;
$sync->from_env = $from_dbname;
$sync->to_env = $to_dbname;

$sync->sync_objects($main_class, $from_where);
